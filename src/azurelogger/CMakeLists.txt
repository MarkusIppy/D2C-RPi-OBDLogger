INCLUDE_DIRECTORIES(
	.
	../obdinfo/
	../obdcomm/
)

FILE(GLOB AZUREOBDLOGGER_SRCS
	*.c *.h
)

INCLUDE(CheckIncludeFiles)
INCLUDE(CheckSymbolExists)
CHECK_INCLUDE_FILES("signal.h" HAVE_SIGNAL_H)

IF(HAVE_SIGNAL_H)
	ADD_DEFINITIONS(-DHAVE_SIGNAL_H)
	CHECK_SYMBOL_EXISTS(sigaction "signal.h" HAVE_SIGACTION)
	CHECK_SYMBOL_EXISTS(signal "signal.h" HAVE_SIGNAL_FUNC)

	IF(HAVE_SIGACTION)
		ADD_DEFINITIONS(-DHAVE_SIGACTION)
	ELSE(HAVE_SIGACTION)
		IF(HAVE_SIGNAL_FUNC)
			ADD_DEFINITIONS(-DHAVE_SIGNAL_FUNC)
		ENDIF(HAVE_SIGNAL_FUNC)
	ENDIF(HAVE_SIGACTION)
ENDIF(HAVE_SIGNAL_H)



SET(AZUREOBDLOGGER_LIBS
	ckobdconfigfile
	ckobdinfo
	ckobdcomm
)

IF(GPSD_FOUND AND NOT OBD_DISABLE_GPSD)
  SET(AZUREOBDLOGGER_LIBS ${AZUREOBDLOGGER_LIBS} ${GPSD_LIBRARY})
ENDIF(GPSD_FOUND AND NOT OBD_DISABLE_GPSD)


IF(PROTONC_FOUND AND NOT OBD_DISABLE_PROTONC)
	SET(AZUREOBDLOGGER_LIBS ${AZUREOBDLOGGER_LIBS} ${PROTONC_LIBRARY})
ENDIF(PROTONC_FOUND AND NOT OBD_DISABLE_PROTONC)

IF(OBD_ENABLE_DBUS)
	SET(AZUREOBDLOGGER_LIBS ${AZUREOBDLOGGER_LIBS} ${DBUS_LIBRARY})
ENDIF(OBD_ENABLE_DBUS)


ADD_EXECUTABLE(azureobdlogger ${AZUREOBDLOGGER_SRCS})

TARGET_LINK_LIBRARIES(azureobdlogger ${AZUREOBDLOGGER_LIBS})

INSTALL(TARGETS azureobdlogger
	RUNTIME DESTINATION bin)

INSTALL(FILES ${AzureOBDLogger_SOURCE_DIR}/man/man1/azureobdlogger.1
        DESTINATION share/man/man1)

INSTALL(FILES ${AzureOBDLogger_SOURCE_DIR}/man/man5/dot-azureobdlogger.5
        DESTINATION share/man/man5)

